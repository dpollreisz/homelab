---
clusterName: ${CLUSTER_NAME}

# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.7.1
# renovate: datasource=github-releases extractVersion=^v(?<version>.*)$ depName=kubernetes/kubernetes
kubernetesVersion: 1.30.0

endpoint: "https://${CLUSTER_NAME}.${INTERNAL_DOMAIN}:6443"

allowSchedulingOnMasters: true
allowSchedulingOnControlPlanes: true

clusterPodNets:
  - 172.22.0.0/16
clusterSvcNets:
  - 172.23.0.0/16

cniConfig:
  name: none

additionalApiServerCertSans: &san
  - ${CLUSTER_ENDPOINT_IP}
  - ${CLUSTER_NAME}.${INTERNAL_DOMAIN}
  - ${EXTERNAL_CLUSTER_NAME}.${EXTERNAL_DOMAIN}
  - 127.0.0.1

additionalMachineCertSans: *san

nodes:
  # Dell R420 / Xeon E5-2470 / 128GB / 250GB SSD / 3TB SATA
  - hostname: dtmrh-u-dr420-n1.${INTERNAL_DOMAIN}
    controlPlane: true
    ipAddress: 10.27.0.11
    installDisk: /dev/sdc
    disableSearchDomain: true
    networkInterfaces:
      - interface: bond0
        dhcp: true
        dhcpOptions:
          routeMetric: 1024
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}
        bond:
          mode: 802.3ad
          miimon: 100
          interfaces:
            - eth0
            - eth1
    schematic:
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/intel-ucode
            - siderolabs/iscsi-tools
            - siderolabs/nvidia-container-toolkit
            - siderolabs/nonfree-kmod-nvidia
    patches:
      - |-
        - op: add
          path: /machine/files
          value:
            - content: |
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
                  default_runtime_name = "nvidia"
              path: /etc/cri/conf.d/20-customization.part
              op: append
      - |-
        - op: add
          path: /machine/kernel
          value:
            modules:
              - name: nvidia
              - name: nvidia_uvm
              - name: nvidia_drm
              - name: nvidia_modeset
      - |-
        - op: add
          path: /machine/sysctls
          value:
            net.core.bpf_jit_harden: 1
    nodeLabels: 
      topology.kubernetes.io/region: dtmrh
      topology.kubernetes.io/zone: dtmrh-u
      #Needed due to Labels only allowing 63 Characters
      factory.talos.dev/schematic-prefix: 220e955db777255fbc0b4ce1123ce23a
      factory.talos.dev/schematic-suffix: d5344e64d06b07213faa340f4ff0e533

  # Dell R420 / Xeon E5-2470 / 144GB / 250GB SSD / 3TB SATA
  - hostname: dtmrh-u-dr420-n2.${INTERNAL_DOMAIN}
    controlPlane: true
    ipAddress: 10.27.0.12
    installDisk: /dev/sdb
    disableSearchDomain: true
    networkInterfaces:
      - interface: bond0
        dhcp: true
        dhcpOptions:
          routeMetric: 1024
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}
        bond:
          mode: 802.3ad
          miimon: 100
          interfaces:
            - eth0
            - eth1
    nodeLabels:
      topology.kubernetes.io/region: dtmrh
      topology.kubernetes.io/zone: dtmrh-u
      #Needed due to Labels only allowing 63 Characters
      factory.talos.dev/schematic-prefix: 082ff64bad4c1e7745cf2529dced6102
      factory.talos.dev/schematic-suffix: b4f1691df0d787c78aa00f976f5ef172

  # Dell R420 / Xeon E5-2470 / 160GB / 250GB SSD / 3TB SATA
  - hostname: dtmrh-u-dr420-n3.${INTERNAL_DOMAIN}
    controlPlane: true
    ipAddress: 10.27.0.13
    installDisk: /dev/sdb
    disableSearchDomain: true
    networkInterfaces:
      - interface: bond0
        dhcp: true
        dhcpOptions:
          routeMetric: 1024
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}
        bond:
          mode: 802.3ad
          miimon: 100
          interfaces:
            - eth0
            - eth1
    nodeLabels:
      topology.kubernetes.io/region: dtmrh
      topology.kubernetes.io/zone: dtmrh-u
      #Needed due to Labels only allowing 63 Characters
      factory.talos.dev/schematic-prefix: 082ff64bad4c1e7745cf2529dced6102
      factory.talos.dev/schematic-suffix: b4f1691df0d787c78aa00f976f5ef172

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions:
          - siderolabs/intel-ucode
          - siderolabs/iscsi-tools

  patches:
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    # - |-
    #   cluster:
    #     discovery:
    #       registries:
    #         kubernetes:
    #           disabled: false
    #         service:
    #           disabled: true

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: true
          extraConfig:
            maxPods: 250
          nodeIP:
            validSubnets:
              - 10.77.0.0/24

      # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Force nameserver
    - |-
      machine:
        network:
          nameservers:
            - ${DNS_SERVER}

    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers:
            - ${NTP_SERVER}

    # Static host entries
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: ${CLUSTER_ENDPOINT_IP}
              aliases:
                - ${CLUSTER_NAME}.${INTERNAL_DOMAIN}
            - ip: ${CLUSTER_ENDPOINT_IP}
              aliases:
                - ${EXTERNAL_CLUSTER_NAME}.${EXTERNAL_DOMAIN}

    # Custom sysctl settings
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192

    # Various udev rules
    - |-
      machine:
        udev:
          rules:
            - KERNEL=="ttyUSB[0-9]", GROUP="20", MODE="0660"

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.27.0.0/24

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system
